<-- LECTURE 94 -->
⭐ SERVER:
Server is something that serves, A server is a computer or a system that provides services or resources to other computers, called clients, over a network.
example : Nodejs and Bun

⭐ Node.js and Bun in the Context of Web Servers
JavaScript runtime environments used for building and running web servers, but they have different purposes and optimizations.

⭐ Creating Server with help of "Nodejs"
    ->http.createServer() creates a web server.
    ->The callback function (req, res) => {} runs every time a client (like a web browser) makes a request to the server.
        ->req (request) represents the incoming request (from the browser).
        ->res (response) is used to send a response back to the client.

⭐ Postman [use for testing]
Postman is used to test APIs before integrating them into a frontend like React.

⭐ Creating Server with help of "BUN"
What Should You Focus On?
✅ How Bun's serve() function works (like http.createServer in Node.js)
✅ How routing works (checking url.pathname)
✅ How responses are sent using new Response()
What Can You Skip?
❌ Exact syntax (you can always Google it)
❌ Remembering every method (as long as you understand the logic)




<-- LECTURE 95 -->
⭐ Nothing much he is just telling about the backend series. 
⭐ He is telling about course and he is telling about "GOAL" and here he will tell about transferrable knowledge.
⭐ complex and scalable backend.
 



<-- LECTURE 96 -->
⭐ Introduction : 
This lecture is based on how we can do Postman testing and how we check postman and how all the things works in Postman .

⭐ Express.js
It helps us to write Routes for our webpages.
Express.js is a backend web framework for Node.js used to build web applications and APIs. It simplifies handling HTTP requests and responses, making it easier to create robust web servers.

⭐ Routes:
Routes define how an application should handle different HTTP requests. In simple terms, a route is a combination of:
1. A URL (endpoint)
2. An HTTP method (GET, POST, etc.)
3. A callback function that runs when the route is accessed

⭐ Express.js
🔱First command that we will use is npm init.
🔱Second command is installing express "npm install express"
The command npm init is used to initialize a new Node.js project by creating a package.json file. package.json is a configuration file that stores metadata about your project, dependencies, scripts, and other settings.

⭐ package.json
"type": "module"    => we can use import
"type": "commonjs"  => we can use const import here


⭐ Dev Dependencies [Nodemon]
Dev dependencies (short for development dependencies) are packages that are required only during development and not in production.
"npm i -D nodemon" use for installing nodemon [Nodemon is a tool that automatically restarts your Node.js application whenever you make changes to your files.]


⭐ GET & POST & PUT & DELETE    [C-R-U-D]
app.post(); => for taking the input
app.get();  => for displaying something on routes
app.put();  => updating some information 
app.delete; => deleting some information




<-- LECTURE 97 -->
GOAL: tests and documentation with Postman and deployment

⭐ What is DigitalOcean?
DigitalOcean is a cloud computing platform that provides developers with Infrastructure-as-a-Service (IaaS) and Platform-as-a-Service (PaaS) solutions. It offers virtual machines (Droplets), managed databases, Kubernetes, object storage, and other cloud services that help developers deploy, manage, and scale applications easily.
👉Hosting websites & applications (Django, Flask, Node.js, etc.)
👉Running APIs & backend services

⭐ .env
A .env file (short for "environment file") is a simple text file that stores configuration settings and sensitive information (like API keys, database credentials, and secret tokens) for a project. It helps keep your code clean, secure, and easily configurable.
🔒Security
⚙️Easier Configuration 
🚫Prevents Accidental Leaks 



